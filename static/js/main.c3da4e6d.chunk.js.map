{"version":3,"sources":["data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Box","styled","div","Title","h4","props","색상","Info","재고","Detail","useState","alert","alert변경","inputData","inputData변경","useEffect","Timer","setTimeout","clearTimeout","useParams","history","useHistory","className","onChange","e","target","value","MyAlert","src","width","shoes","onClick","재고변경","goBack","List","i","App","Data","shoes변경","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","map","a","axios","get","then","result","shoesCopy","data","catch","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3da4e6d.chunk.js","sourcesContent":["export default [\n    {\n      id : 0,\n      title : \"White and Black\",\n      content : \"Born in France\",\n      price : 120000\n    },\n  \n    {\n      id : 1,\n      title : \"Red Knit\",\n      content : \"Born in Seoul\",\n      price : 110000\n    },\n  \n    {\n      id : 2,\n      title : \"Grey Yordan\",\n      content : \"Born in the States\",\n      price : 130000\n    }\n  ]","import axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss';\n\nlet Box = styled.div`\n    padding:20px;\n`;\n\nlet Title = styled.h4`\n    font-size:25px;\n    color : ${ props => props.색상 }\n`;\n\n\n// class Detail2 extends React.Component {\n//     componentDidMount(){\n\n//     }\n//     componentWillUnmount(){\n\n//     }\n// }\n\nfunction Detail(props){\n    let [alert, alert변경] = useState(true);\n\n    let [inputData, inputData변경] = useState();\n    \n    \n    useEffect(()=>{ // Detail 컴포넌트 등장 & 업데이트시 실행할 코드\n\n        // Detail 컴포넌트 로드시 Ajsx로 데이터를 가져오고싶음\n        // 이것은 당연히 useEffect()\n        // axios.get()\n\n        // 2초 후에 alert 창 안보이게 해주셈\n        let Timer = setTimeout(( )=> { alert변경(false) },2000)\n        // setTimeout 이런거 쓸 때 주의점 \n        // - 타이머 해제 스킬\n        return ()=> { clearTimeout(Timer) }\n\n            // return function 어쩌구 () {\n            //     // 사라질 때 실행될 코드\n            // }\n        \n    }, [alert]); // alert라는 스테이트가 변경될때만 실행됨. 빈칸이면 _가 변경될때만 \n                // 실행하는거라 영영 실행안됨. 딱 1번만 실행\n\n    let { id } = useParams();\n    let history = useHistory();\n    return(\n        <div className=\"container\">\n            <Box>\n                <Title className=\"red\">상세페이지</Title>\n            </Box>\n\n            {inputData}\n            <input onChange={ (e)=> { inputData변경(e.target.value)} }/>\n\n            {\n                alert === true \n                ?  <MyAlert />\n                : null\n            }\n        \n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\n                </div>\n                <div className=\"col-md-6 mt-4\">\n                <h4 className=\"pt-5\">{props.shoes[id].title}</h4>\n                <p>{props.shoes[id].content}</p>\n                <p>{props.shoes[id].price}원</p>\n\n                <Info 재고={props.재고} />\n\n                <button className=\"btn btn-danger\" onClick={ ()=> { props.재고변경([9,10,11])} }>주문하기</button>\n                \n                <button className=\"btn btn-danger\" onClick={ ()=> { \n                    history.goBack(); } }>뒤로가기</button> \n                </div>\n            </div>\n        </div>\n    )    \n    \n    function MyAlert() {\n        return(\n            <div className=\"my-alert2\">\n                <p> { \"2초후에 사라지게 하기\" } </p>\n            </div>\n        )\n    }\n}\n\nfunction Info(props){\n\n    return(\n        <p>재고 : {props.재고[0]} </p>\n    )\n}\n\n  export default Detail;","/* eslint-disable */\n\nimport React, {useState} from 'react';\nimport './App.css';\nimport { Navbar, Container, Nav, NavDropdown, Jumbotron, Button} from 'react-bootstrap';\nimport Data from './data.js';\nimport Detail from './Detail.js';\nimport axios from 'axios';\n\nimport { Link, Route, Switch} from 'react-router-dom';\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(Data);\n  let [재고, 재고변경] = useState([10,11,12]);\n  // 상품재고 표시\n  // - 재고량은 App.js에 state로 대충만들자\n\n  return (\n    <div className=\"App\">\n      \n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/detail\">Detil</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      \n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>20% Season Off</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          <div className=\"container\">\n            <div className=\"row\">\n              { \n                shoes.map((a,i)=>{\n                  return <List shoes={ shoes[i] } i={i} key={i} />\n                })\n              }\n            </div>\n            <button className=\"btn btn-primary\" onClick={ ()=> {\n              // 여기서 fetch 쓸거면 fetch(URL주소).then() 쓰면됨.\n              // fetch()는 안바꿔주고 JSON 그대로 가져오고 object로 바꿔주는 작업도 필요\n              // axios를 쓰면 JSON을 object로 알아서 바꿔준다\n\n              // 더보기 버튼 누르면 \"로딩중입니다\" 표시해주려면\n              // 로딩중이라는 UI 띄움\n\n\n              // 로딩중이라는 UI 안보이게 처리\n\n              // 서버에 데이터를 보내고 싶을 때 POST 요청하는 법\n              // axios.post('서버URL', {id : 'codingapple', pw : 1234, }).then();\n\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then( (result)=> {\n                let shoesCopy = [...shoes, ...result.data]\n                shoes변경(shoesCopy)\n                \n              },) // 데이터 가져오기 성공하면 .then(코드)\n              .catch( ()=> {\n                console.log('실패')\n              }) // 가져오기 실패하면 .catch(코드)\n              // 1. 버튼 누르면 axios.get(데이터 요청할 URL)\n              // 새로고침 없이 데이터 가져옴.\n            } }>더보기</button>\n          </div>\n        </Route>\n        <Route path=\"/detail/:id\">\n          <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}/>\n        </Route>\n\n        <Route path=\"/:id\">\n          <div>아무거나 적었을 때 이거 보여주셈</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\n\n\nfunction List(props){\n  return(\n    <div className=\"col-md-4\">\n      <img src={'https://codingapple1.github.io/shop/shoes' + (props.i + 1) + '.jpg'} width=\"100%\" />\n      <h4>{ props.shoes.title }</h4>\n      <p> { props.shoes.content } & { props.shoes.price }</p>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}